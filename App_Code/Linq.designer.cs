#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="aspnet-Orange-20170331015318")]
public partial class LinqDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region 可扩展性方法定义
  partial void OnCreated();
  partial void InsertCommodities(Commodities instance);
  partial void UpdateCommodities(Commodities instance);
  partial void DeleteCommodities(Commodities instance);
  partial void InsertCommodity_1(Commodity_1 instance);
  partial void UpdateCommodity_1(Commodity_1 instance);
  partial void DeleteCommodity_1(Commodity_1 instance);
  partial void InsertCommodity_2(Commodity_2 instance);
  partial void UpdateCommodity_2(Commodity_2 instance);
  partial void DeleteCommodity_2(Commodity_2 instance);
  partial void InsertCommodity_attribute(Commodity_attribute instance);
  partial void UpdateCommodity_attribute(Commodity_attribute instance);
  partial void DeleteCommodity_attribute(Commodity_attribute instance);
  partial void InsertCommodity_type(Commodity_type instance);
  partial void UpdateCommodity_type(Commodity_type instance);
  partial void DeleteCommodity_type(Commodity_type instance);
  partial void InsertCommodity_option1(Commodity_option1 instance);
  partial void UpdateCommodity_option1(Commodity_option1 instance);
  partial void DeleteCommodity_option1(Commodity_option1 instance);
  partial void InsertCommodity_option2(Commodity_option2 instance);
  partial void UpdateCommodity_option2(Commodity_option2 instance);
  partial void DeleteCommodity_option2(Commodity_option2 instance);
  partial void InsertIMGs(IMGs instance);
  partial void UpdateIMGs(IMGs instance);
  partial void DeleteIMGs(IMGs instance);
  partial void InsertResses(Resses instance);
  partial void UpdateResses(Resses instance);
  partial void DeleteResses(Resses instance);
  partial void InsertUsers(Users instance);
  partial void UpdateUsers(Users instance);
  partial void DeleteUsers(Users instance);
  partial void InsertUser_IN(User_IN instance);
  partial void UpdateUser_IN(User_IN instance);
  partial void DeleteUser_IN(User_IN instance);
  partial void InsertShopcarts(Shopcarts instance);
  partial void UpdateShopcarts(Shopcarts instance);
  partial void DeleteShopcarts(Shopcarts instance);
  partial void InsertOrders(Orders instance);
  partial void UpdateOrders(Orders instance);
  partial void DeleteOrders(Orders instance);
  partial void InsertHTUsers(HTUsers instance);
  partial void UpdateHTUsers(HTUsers instance);
  partial void DeleteHTUsers(HTUsers instance);
  #endregion
	
	public LinqDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["aspnet_Orange_20170331015318ConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public LinqDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public LinqDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public LinqDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public LinqDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Commodities> Commodities
	{
		get
		{
			return this.GetTable<Commodities>();
		}
	}
	
	public System.Data.Linq.Table<Commodity_1> Commodity_1
	{
		get
		{
			return this.GetTable<Commodity_1>();
		}
	}
	
	public System.Data.Linq.Table<Commodity_2> Commodity_2
	{
		get
		{
			return this.GetTable<Commodity_2>();
		}
	}
	
	public System.Data.Linq.Table<Commodity_attribute> Commodity_attribute
	{
		get
		{
			return this.GetTable<Commodity_attribute>();
		}
	}
	
	public System.Data.Linq.Table<Commodity_type> Commodity_type
	{
		get
		{
			return this.GetTable<Commodity_type>();
		}
	}
	
	public System.Data.Linq.Table<Commodity_option1> Commodity_option1
	{
		get
		{
			return this.GetTable<Commodity_option1>();
		}
	}
	
	public System.Data.Linq.Table<Commodity_option2> Commodity_option2
	{
		get
		{
			return this.GetTable<Commodity_option2>();
		}
	}
	
	public System.Data.Linq.Table<IMGs> IMGs
	{
		get
		{
			return this.GetTable<IMGs>();
		}
	}
	
	public System.Data.Linq.Table<Resses> Resses
	{
		get
		{
			return this.GetTable<Resses>();
		}
	}
	
	public System.Data.Linq.Table<Users> Users
	{
		get
		{
			return this.GetTable<Users>();
		}
	}
	
	public System.Data.Linq.Table<User_IN> User_IN
	{
		get
		{
			return this.GetTable<User_IN>();
		}
	}
	
	public System.Data.Linq.Table<Shopcarts> Shopcarts
	{
		get
		{
			return this.GetTable<Shopcarts>();
		}
	}
	
	public System.Data.Linq.Table<Orders> Orders
	{
		get
		{
			return this.GetTable<Orders>();
		}
	}
	
	public System.Data.Linq.Table<HTUsers> HTUsers
	{
		get
		{
			return this.GetTable<HTUsers>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Commodities")]
public partial class Commodities : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Name;
	
	private int _Number;
	
	private double _Price;
	
	private string _img;
	
	private System.Nullable<int> _ID_ID;
	
	private string _img_small;
	
	private string _jieshao;
	
	private double _Price_old;
	
	private string _Time;
	
	private EntitySet<Commodity_attribute> _Commodity_attribute;
	
	private EntityRef<Commodity_2> _Commodity_2;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNumberChanging(int value);
    partial void OnNumberChanged();
    partial void OnPriceChanging(double value);
    partial void OnPriceChanged();
    partial void OnimgChanging(string value);
    partial void OnimgChanged();
    partial void OnID_IDChanging(System.Nullable<int> value);
    partial void OnID_IDChanged();
    partial void Onimg_smallChanging(string value);
    partial void Onimg_smallChanged();
    partial void OnjieshaoChanging(string value);
    partial void OnjieshaoChanged();
    partial void OnPrice_oldChanging(double value);
    partial void OnPrice_oldChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    #endregion
	
	public Commodities()
	{
		this._Commodity_attribute = new EntitySet<Commodity_attribute>(new Action<Commodity_attribute>(this.attach_Commodity_attribute), new Action<Commodity_attribute>(this.detach_Commodity_attribute));
		this._Commodity_2 = default(EntityRef<Commodity_2>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="Int NOT NULL")]
	public int Number
	{
		get
		{
			return this._Number;
		}
		set
		{
			if ((this._Number != value))
			{
				this.OnNumberChanging(value);
				this.SendPropertyChanging();
				this._Number = value;
				this.SendPropertyChanged("Number");
				this.OnNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float NOT NULL")]
	public double Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this.OnPriceChanging(value);
				this.SendPropertyChanging();
				this._Price = value;
				this.SendPropertyChanged("Price");
				this.OnPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_img", DbType="NVarChar(MAX)")]
	public string img
	{
		get
		{
			return this._img;
		}
		set
		{
			if ((this._img != value))
			{
				this.OnimgChanging(value);
				this.SendPropertyChanging();
				this._img = value;
				this.SendPropertyChanged("img");
				this.OnimgChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ID", DbType="Int")]
	public System.Nullable<int> ID_ID
	{
		get
		{
			return this._ID_ID;
		}
		set
		{
			if ((this._ID_ID != value))
			{
				if (this._Commodity_2.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnID_IDChanging(value);
				this.SendPropertyChanging();
				this._ID_ID = value;
				this.SendPropertyChanged("ID_ID");
				this.OnID_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_img_small", DbType="NVarChar(MAX)")]
	public string img_small
	{
		get
		{
			return this._img_small;
		}
		set
		{
			if ((this._img_small != value))
			{
				this.Onimg_smallChanging(value);
				this.SendPropertyChanging();
				this._img_small = value;
				this.SendPropertyChanged("img_small");
				this.Onimg_smallChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_jieshao", DbType="NVarChar(MAX)")]
	public string jieshao
	{
		get
		{
			return this._jieshao;
		}
		set
		{
			if ((this._jieshao != value))
			{
				this.OnjieshaoChanging(value);
				this.SendPropertyChanging();
				this._jieshao = value;
				this.SendPropertyChanged("jieshao");
				this.OnjieshaoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price_old", DbType="Float NOT NULL")]
	public double Price_old
	{
		get
		{
			return this._Price_old;
		}
		set
		{
			if ((this._Price_old != value))
			{
				this.OnPrice_oldChanging(value);
				this.SendPropertyChanging();
				this._Price_old = value;
				this.SendPropertyChanged("Price_old");
				this.OnPrice_oldChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NVarChar(MAX)")]
	public string Time
	{
		get
		{
			return this._Time;
		}
		set
		{
			if ((this._Time != value))
			{
				this.OnTimeChanging(value);
				this.SendPropertyChanging();
				this._Time = value;
				this.SendPropertyChanged("Time");
				this.OnTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Commodities_Commodity_attribute", Storage="_Commodity_attribute", ThisKey="Id", OtherKey="Commodity_Id")]
	public EntitySet<Commodity_attribute> Commodity_attribute
	{
		get
		{
			return this._Commodity_attribute;
		}
		set
		{
			this._Commodity_attribute.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Commodity_2_Commodities", Storage="_Commodity_2", ThisKey="ID_ID", OtherKey="ID", IsForeignKey=true)]
	public Commodity_2 Commodity_2
	{
		get
		{
			return this._Commodity_2.Entity;
		}
		set
		{
			Commodity_2 previousValue = this._Commodity_2.Entity;
			if (((previousValue != value) 
						|| (this._Commodity_2.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Commodity_2.Entity = null;
					previousValue.Commodities.Remove(this);
				}
				this._Commodity_2.Entity = value;
				if ((value != null))
				{
					value.Commodities.Add(this);
					this._ID_ID = value.ID;
				}
				else
				{
					this._ID_ID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Commodity_2");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Commodity_attribute(Commodity_attribute entity)
	{
		this.SendPropertyChanging();
		entity.Commodities = this;
	}
	
	private void detach_Commodity_attribute(Commodity_attribute entity)
	{
		this.SendPropertyChanging();
		entity.Commodities = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Commodity_1")]
public partial class Commodity_1 : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Name;
	
	private string _Slogan;
	
	private System.Nullable<int> _ID_1_ID;
	
	private string _Time;
	
	private EntitySet<Commodity_2> _Commodity_2;
	
	private EntitySet<Commodity_2> _Commodity_21;
	
	private EntitySet<Commodity_2> _Commodity_22;
	
	private EntitySet<Commodity_2> _Commodity_23;
	
	private EntityRef<Commodity_type> _Commodity_type;
	
	private EntityRef<Commodity_type> _Commodity_type1;
	
	private EntityRef<Commodity_type> _Commodity_type2;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSloganChanging(string value);
    partial void OnSloganChanged();
    partial void OnID_1_IDChanging(System.Nullable<int> value);
    partial void OnID_1_IDChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    #endregion
	
	public Commodity_1()
	{
		this._Commodity_2 = new EntitySet<Commodity_2>(new Action<Commodity_2>(this.attach_Commodity_2), new Action<Commodity_2>(this.detach_Commodity_2));
		this._Commodity_21 = new EntitySet<Commodity_2>(new Action<Commodity_2>(this.attach_Commodity_21), new Action<Commodity_2>(this.detach_Commodity_21));
		this._Commodity_22 = new EntitySet<Commodity_2>(new Action<Commodity_2>(this.attach_Commodity_22), new Action<Commodity_2>(this.detach_Commodity_22));
		this._Commodity_23 = new EntitySet<Commodity_2>(new Action<Commodity_2>(this.attach_Commodity_23), new Action<Commodity_2>(this.detach_Commodity_23));
		this._Commodity_type = default(EntityRef<Commodity_type>);
		this._Commodity_type1 = default(EntityRef<Commodity_type>);
		this._Commodity_type2 = default(EntityRef<Commodity_type>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Slogan", DbType="NVarChar(MAX)")]
	public string Slogan
	{
		get
		{
			return this._Slogan;
		}
		set
		{
			if ((this._Slogan != value))
			{
				this.OnSloganChanging(value);
				this.SendPropertyChanging();
				this._Slogan = value;
				this.SendPropertyChanged("Slogan");
				this.OnSloganChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_1_ID", DbType="Int")]
	public System.Nullable<int> ID_1_ID
	{
		get
		{
			return this._ID_1_ID;
		}
		set
		{
			if ((this._ID_1_ID != value))
			{
				if (((this._Commodity_type.HasLoadedOrAssignedValue || this._Commodity_type1.HasLoadedOrAssignedValue) 
							|| this._Commodity_type2.HasLoadedOrAssignedValue))
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnID_1_IDChanging(value);
				this.SendPropertyChanging();
				this._ID_1_ID = value;
				this.SendPropertyChanged("ID_1_ID");
				this.OnID_1_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NVarChar(MAX)")]
	public string Time
	{
		get
		{
			return this._Time;
		}
		set
		{
			if ((this._Time != value))
			{
				this.OnTimeChanging(value);
				this.SendPropertyChanging();
				this._Time = value;
				this.SendPropertyChanged("Time");
				this.OnTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Commodity_1_Commodity_2", Storage="_Commodity_2", ThisKey="ID", OtherKey="ID_1_ID")]
	public EntitySet<Commodity_2> Commodity_2
	{
		get
		{
			return this._Commodity_2;
		}
		set
		{
			this._Commodity_2.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Commodity_1_Commodity_21", Storage="_Commodity_21", ThisKey="ID", OtherKey="ID_1_ID")]
	public EntitySet<Commodity_2> Commodity_21
	{
		get
		{
			return this._Commodity_21;
		}
		set
		{
			this._Commodity_21.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Commodity_1_Commodity_22", Storage="_Commodity_22", ThisKey="ID", OtherKey="ID_1_ID")]
	public EntitySet<Commodity_2> Commodity_22
	{
		get
		{
			return this._Commodity_22;
		}
		set
		{
			this._Commodity_22.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Commodity_1_Commodity_23", Storage="_Commodity_23", ThisKey="ID", OtherKey="ID_1_ID")]
	public EntitySet<Commodity_2> Commodity_23
	{
		get
		{
			return this._Commodity_23;
		}
		set
		{
			this._Commodity_23.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Commodity_type_Commodity_1", Storage="_Commodity_type", ThisKey="ID_1_ID", OtherKey="ID", IsForeignKey=true)]
	public Commodity_type Commodity_type
	{
		get
		{
			return this._Commodity_type.Entity;
		}
		set
		{
			Commodity_type previousValue = this._Commodity_type.Entity;
			if (((previousValue != value) 
						|| (this._Commodity_type.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Commodity_type.Entity = null;
					previousValue.Commodity_1.Remove(this);
				}
				this._Commodity_type.Entity = value;
				if ((value != null))
				{
					value.Commodity_1.Add(this);
					this._ID_1_ID = value.ID;
				}
				else
				{
					this._ID_1_ID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Commodity_type");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Commodity_type_Commodity_11", Storage="_Commodity_type1", ThisKey="ID_1_ID", OtherKey="ID", IsForeignKey=true)]
	public Commodity_type Commodity_type1
	{
		get
		{
			return this._Commodity_type1.Entity;
		}
		set
		{
			Commodity_type previousValue = this._Commodity_type1.Entity;
			if (((previousValue != value) 
						|| (this._Commodity_type1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Commodity_type1.Entity = null;
					previousValue.Commodity_11.Remove(this);
				}
				this._Commodity_type1.Entity = value;
				if ((value != null))
				{
					value.Commodity_11.Add(this);
					this._ID_1_ID = value.ID;
				}
				else
				{
					this._ID_1_ID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Commodity_type1");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Commodity_type_Commodity_12", Storage="_Commodity_type2", ThisKey="ID_1_ID", OtherKey="ID", IsForeignKey=true)]
	public Commodity_type Commodity_type2
	{
		get
		{
			return this._Commodity_type2.Entity;
		}
		set
		{
			Commodity_type previousValue = this._Commodity_type2.Entity;
			if (((previousValue != value) 
						|| (this._Commodity_type2.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Commodity_type2.Entity = null;
					previousValue.Commodity_12.Remove(this);
				}
				this._Commodity_type2.Entity = value;
				if ((value != null))
				{
					value.Commodity_12.Add(this);
					this._ID_1_ID = value.ID;
				}
				else
				{
					this._ID_1_ID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Commodity_type2");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Commodity_2(Commodity_2 entity)
	{
		this.SendPropertyChanging();
		entity.Commodity_1 = this;
	}
	
	private void detach_Commodity_2(Commodity_2 entity)
	{
		this.SendPropertyChanging();
		entity.Commodity_1 = null;
	}
	
	private void attach_Commodity_21(Commodity_2 entity)
	{
		this.SendPropertyChanging();
		entity.Commodity_11 = this;
	}
	
	private void detach_Commodity_21(Commodity_2 entity)
	{
		this.SendPropertyChanging();
		entity.Commodity_11 = null;
	}
	
	private void attach_Commodity_22(Commodity_2 entity)
	{
		this.SendPropertyChanging();
		entity.Commodity_12 = this;
	}
	
	private void detach_Commodity_22(Commodity_2 entity)
	{
		this.SendPropertyChanging();
		entity.Commodity_12 = null;
	}
	
	private void attach_Commodity_23(Commodity_2 entity)
	{
		this.SendPropertyChanging();
		entity.Commodity_13 = this;
	}
	
	private void detach_Commodity_23(Commodity_2 entity)
	{
		this.SendPropertyChanging();
		entity.Commodity_13 = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Commodity_2")]
public partial class Commodity_2 : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Name;
	
	private System.Nullable<int> _ID_1_ID;
	
	private string _Time;
	
	private EntitySet<Commodities> _Commodities;
	
	private EntityRef<Commodity_1> _Commodity_1;
	
	private EntityRef<Commodity_1> _Commodity_11;
	
	private EntityRef<Commodity_1> _Commodity_12;
	
	private EntityRef<Commodity_1> _Commodity_13;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnID_1_IDChanging(System.Nullable<int> value);
    partial void OnID_1_IDChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    #endregion
	
	public Commodity_2()
	{
		this._Commodities = new EntitySet<Commodities>(new Action<Commodities>(this.attach_Commodities), new Action<Commodities>(this.detach_Commodities));
		this._Commodity_1 = default(EntityRef<Commodity_1>);
		this._Commodity_11 = default(EntityRef<Commodity_1>);
		this._Commodity_12 = default(EntityRef<Commodity_1>);
		this._Commodity_13 = default(EntityRef<Commodity_1>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_1_ID", DbType="Int")]
	public System.Nullable<int> ID_1_ID
	{
		get
		{
			return this._ID_1_ID;
		}
		set
		{
			if ((this._ID_1_ID != value))
			{
				if ((((this._Commodity_1.HasLoadedOrAssignedValue || this._Commodity_11.HasLoadedOrAssignedValue) 
							|| this._Commodity_12.HasLoadedOrAssignedValue) 
							|| this._Commodity_13.HasLoadedOrAssignedValue))
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnID_1_IDChanging(value);
				this.SendPropertyChanging();
				this._ID_1_ID = value;
				this.SendPropertyChanged("ID_1_ID");
				this.OnID_1_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NVarChar(MAX)")]
	public string Time
	{
		get
		{
			return this._Time;
		}
		set
		{
			if ((this._Time != value))
			{
				this.OnTimeChanging(value);
				this.SendPropertyChanging();
				this._Time = value;
				this.SendPropertyChanged("Time");
				this.OnTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Commodity_2_Commodities", Storage="_Commodities", ThisKey="ID", OtherKey="ID_ID")]
	public EntitySet<Commodities> Commodities
	{
		get
		{
			return this._Commodities;
		}
		set
		{
			this._Commodities.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Commodity_1_Commodity_2", Storage="_Commodity_1", ThisKey="ID_1_ID", OtherKey="ID", IsForeignKey=true)]
	public Commodity_1 Commodity_1
	{
		get
		{
			return this._Commodity_1.Entity;
		}
		set
		{
			Commodity_1 previousValue = this._Commodity_1.Entity;
			if (((previousValue != value) 
						|| (this._Commodity_1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Commodity_1.Entity = null;
					previousValue.Commodity_2.Remove(this);
				}
				this._Commodity_1.Entity = value;
				if ((value != null))
				{
					value.Commodity_2.Add(this);
					this._ID_1_ID = value.ID;
				}
				else
				{
					this._ID_1_ID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Commodity_1");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Commodity_1_Commodity_21", Storage="_Commodity_11", ThisKey="ID_1_ID", OtherKey="ID", IsForeignKey=true)]
	public Commodity_1 Commodity_11
	{
		get
		{
			return this._Commodity_11.Entity;
		}
		set
		{
			Commodity_1 previousValue = this._Commodity_11.Entity;
			if (((previousValue != value) 
						|| (this._Commodity_11.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Commodity_11.Entity = null;
					previousValue.Commodity_21.Remove(this);
				}
				this._Commodity_11.Entity = value;
				if ((value != null))
				{
					value.Commodity_21.Add(this);
					this._ID_1_ID = value.ID;
				}
				else
				{
					this._ID_1_ID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Commodity_11");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Commodity_1_Commodity_22", Storage="_Commodity_12", ThisKey="ID_1_ID", OtherKey="ID", IsForeignKey=true)]
	public Commodity_1 Commodity_12
	{
		get
		{
			return this._Commodity_12.Entity;
		}
		set
		{
			Commodity_1 previousValue = this._Commodity_12.Entity;
			if (((previousValue != value) 
						|| (this._Commodity_12.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Commodity_12.Entity = null;
					previousValue.Commodity_22.Remove(this);
				}
				this._Commodity_12.Entity = value;
				if ((value != null))
				{
					value.Commodity_22.Add(this);
					this._ID_1_ID = value.ID;
				}
				else
				{
					this._ID_1_ID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Commodity_12");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Commodity_1_Commodity_23", Storage="_Commodity_13", ThisKey="ID_1_ID", OtherKey="ID", IsForeignKey=true)]
	public Commodity_1 Commodity_13
	{
		get
		{
			return this._Commodity_13.Entity;
		}
		set
		{
			Commodity_1 previousValue = this._Commodity_13.Entity;
			if (((previousValue != value) 
						|| (this._Commodity_13.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Commodity_13.Entity = null;
					previousValue.Commodity_23.Remove(this);
				}
				this._Commodity_13.Entity = value;
				if ((value != null))
				{
					value.Commodity_23.Add(this);
					this._ID_1_ID = value.ID;
				}
				else
				{
					this._ID_1_ID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Commodity_13");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Commodities(Commodities entity)
	{
		this.SendPropertyChanging();
		entity.Commodity_2 = this;
	}
	
	private void detach_Commodities(Commodities entity)
	{
		this.SendPropertyChanging();
		entity.Commodity_2 = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Commodity_attribute")]
public partial class Commodity_attribute : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Name;
	
	private int _Number;
	
	private System.Nullable<int> _Commodity_Id;
	
	private double _Price;
	
	private System.Nullable<int> _Commodity_option1_Id;
	
	private System.Nullable<int> _Commodity_option2_Id;
	
	private double _Price_old;
	
	private string _Time;
	
	private EntitySet<Shopcarts> _Shopcarts;
	
	private EntitySet<Shopcarts> _Shopcarts1;
	
	private EntitySet<Orders> _Orders;
	
	private EntityRef<Commodity_option1> _Commodity_option1;
	
	private EntityRef<Commodity_option2> _Commodity_option2;
	
	private EntityRef<Commodities> _Commodities;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNumberChanging(int value);
    partial void OnNumberChanged();
    partial void OnCommodity_IdChanging(System.Nullable<int> value);
    partial void OnCommodity_IdChanged();
    partial void OnPriceChanging(double value);
    partial void OnPriceChanged();
    partial void OnCommodity_option1_IdChanging(System.Nullable<int> value);
    partial void OnCommodity_option1_IdChanged();
    partial void OnCommodity_option2_IdChanging(System.Nullable<int> value);
    partial void OnCommodity_option2_IdChanged();
    partial void OnPrice_oldChanging(double value);
    partial void OnPrice_oldChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    #endregion
	
	public Commodity_attribute()
	{
		this._Shopcarts = new EntitySet<Shopcarts>(new Action<Shopcarts>(this.attach_Shopcarts), new Action<Shopcarts>(this.detach_Shopcarts));
		this._Shopcarts1 = new EntitySet<Shopcarts>(new Action<Shopcarts>(this.attach_Shopcarts1), new Action<Shopcarts>(this.detach_Shopcarts1));
		this._Orders = new EntitySet<Orders>(new Action<Orders>(this.attach_Orders), new Action<Orders>(this.detach_Orders));
		this._Commodity_option1 = default(EntityRef<Commodity_option1>);
		this._Commodity_option2 = default(EntityRef<Commodity_option2>);
		this._Commodities = default(EntityRef<Commodities>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="Int NOT NULL")]
	public int Number
	{
		get
		{
			return this._Number;
		}
		set
		{
			if ((this._Number != value))
			{
				this.OnNumberChanging(value);
				this.SendPropertyChanging();
				this._Number = value;
				this.SendPropertyChanged("Number");
				this.OnNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Commodity_Id", DbType="Int")]
	public System.Nullable<int> Commodity_Id
	{
		get
		{
			return this._Commodity_Id;
		}
		set
		{
			if ((this._Commodity_Id != value))
			{
				if (this._Commodities.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCommodity_IdChanging(value);
				this.SendPropertyChanging();
				this._Commodity_Id = value;
				this.SendPropertyChanged("Commodity_Id");
				this.OnCommodity_IdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float NOT NULL")]
	public double Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this.OnPriceChanging(value);
				this.SendPropertyChanging();
				this._Price = value;
				this.SendPropertyChanged("Price");
				this.OnPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Commodity_option1_Id", DbType="Int")]
	public System.Nullable<int> Commodity_option1_Id
	{
		get
		{
			return this._Commodity_option1_Id;
		}
		set
		{
			if ((this._Commodity_option1_Id != value))
			{
				if (this._Commodity_option1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCommodity_option1_IdChanging(value);
				this.SendPropertyChanging();
				this._Commodity_option1_Id = value;
				this.SendPropertyChanged("Commodity_option1_Id");
				this.OnCommodity_option1_IdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Commodity_option2_Id", DbType="Int")]
	public System.Nullable<int> Commodity_option2_Id
	{
		get
		{
			return this._Commodity_option2_Id;
		}
		set
		{
			if ((this._Commodity_option2_Id != value))
			{
				if (this._Commodity_option2.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCommodity_option2_IdChanging(value);
				this.SendPropertyChanging();
				this._Commodity_option2_Id = value;
				this.SendPropertyChanged("Commodity_option2_Id");
				this.OnCommodity_option2_IdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price_old", DbType="Float NOT NULL")]
	public double Price_old
	{
		get
		{
			return this._Price_old;
		}
		set
		{
			if ((this._Price_old != value))
			{
				this.OnPrice_oldChanging(value);
				this.SendPropertyChanging();
				this._Price_old = value;
				this.SendPropertyChanged("Price_old");
				this.OnPrice_oldChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NVarChar(MAX)")]
	public string Time
	{
		get
		{
			return this._Time;
		}
		set
		{
			if ((this._Time != value))
			{
				this.OnTimeChanging(value);
				this.SendPropertyChanging();
				this._Time = value;
				this.SendPropertyChanged("Time");
				this.OnTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Commodity_attribute_Shopcarts", Storage="_Shopcarts", ThisKey="Id", OtherKey="Commodity_Id")]
	public EntitySet<Shopcarts> Shopcarts
	{
		get
		{
			return this._Shopcarts;
		}
		set
		{
			this._Shopcarts.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Commodity_attribute_Shopcarts1", Storage="_Shopcarts1", ThisKey="Id", OtherKey="Commodity_Id")]
	public EntitySet<Shopcarts> Shopcarts1
	{
		get
		{
			return this._Shopcarts1;
		}
		set
		{
			this._Shopcarts1.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Commodity_attribute_Orders", Storage="_Orders", ThisKey="Id", OtherKey="Commodity_Id")]
	public EntitySet<Orders> Orders
	{
		get
		{
			return this._Orders;
		}
		set
		{
			this._Orders.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Commodity_option1_Commodity_attribute", Storage="_Commodity_option1", ThisKey="Commodity_option1_Id", OtherKey="Id", IsForeignKey=true)]
	public Commodity_option1 Commodity_option1
	{
		get
		{
			return this._Commodity_option1.Entity;
		}
		set
		{
			Commodity_option1 previousValue = this._Commodity_option1.Entity;
			if (((previousValue != value) 
						|| (this._Commodity_option1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Commodity_option1.Entity = null;
					previousValue.Commodity_attribute.Remove(this);
				}
				this._Commodity_option1.Entity = value;
				if ((value != null))
				{
					value.Commodity_attribute.Add(this);
					this._Commodity_option1_Id = value.Id;
				}
				else
				{
					this._Commodity_option1_Id = default(Nullable<int>);
				}
				this.SendPropertyChanged("Commodity_option1");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Commodity_option2_Commodity_attribute", Storage="_Commodity_option2", ThisKey="Commodity_option2_Id", OtherKey="Id", IsForeignKey=true)]
	public Commodity_option2 Commodity_option2
	{
		get
		{
			return this._Commodity_option2.Entity;
		}
		set
		{
			Commodity_option2 previousValue = this._Commodity_option2.Entity;
			if (((previousValue != value) 
						|| (this._Commodity_option2.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Commodity_option2.Entity = null;
					previousValue.Commodity_attribute.Remove(this);
				}
				this._Commodity_option2.Entity = value;
				if ((value != null))
				{
					value.Commodity_attribute.Add(this);
					this._Commodity_option2_Id = value.Id;
				}
				else
				{
					this._Commodity_option2_Id = default(Nullable<int>);
				}
				this.SendPropertyChanged("Commodity_option2");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Commodities_Commodity_attribute", Storage="_Commodities", ThisKey="Commodity_Id", OtherKey="Id", IsForeignKey=true)]
	public Commodities Commodities
	{
		get
		{
			return this._Commodities.Entity;
		}
		set
		{
			Commodities previousValue = this._Commodities.Entity;
			if (((previousValue != value) 
						|| (this._Commodities.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Commodities.Entity = null;
					previousValue.Commodity_attribute.Remove(this);
				}
				this._Commodities.Entity = value;
				if ((value != null))
				{
					value.Commodity_attribute.Add(this);
					this._Commodity_Id = value.Id;
				}
				else
				{
					this._Commodity_Id = default(Nullable<int>);
				}
				this.SendPropertyChanged("Commodities");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Shopcarts(Shopcarts entity)
	{
		this.SendPropertyChanging();
		entity.Commodity_attribute = this;
	}
	
	private void detach_Shopcarts(Shopcarts entity)
	{
		this.SendPropertyChanging();
		entity.Commodity_attribute = null;
	}
	
	private void attach_Shopcarts1(Shopcarts entity)
	{
		this.SendPropertyChanging();
		entity.Commodity_attribute1 = this;
	}
	
	private void detach_Shopcarts1(Shopcarts entity)
	{
		this.SendPropertyChanging();
		entity.Commodity_attribute1 = null;
	}
	
	private void attach_Orders(Orders entity)
	{
		this.SendPropertyChanging();
		entity.Commodity_attribute = this;
	}
	
	private void detach_Orders(Orders entity)
	{
		this.SendPropertyChanging();
		entity.Commodity_attribute = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Commodity_type")]
public partial class Commodity_type : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Type_Name;
	
	private string _img;
	
	private string _Time;
	
	private EntitySet<Commodity_1> _Commodity_1;
	
	private EntitySet<Commodity_1> _Commodity_11;
	
	private EntitySet<Commodity_1> _Commodity_12;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnType_NameChanging(string value);
    partial void OnType_NameChanged();
    partial void OnimgChanging(string value);
    partial void OnimgChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    #endregion
	
	public Commodity_type()
	{
		this._Commodity_1 = new EntitySet<Commodity_1>(new Action<Commodity_1>(this.attach_Commodity_1), new Action<Commodity_1>(this.detach_Commodity_1));
		this._Commodity_11 = new EntitySet<Commodity_1>(new Action<Commodity_1>(this.attach_Commodity_11), new Action<Commodity_1>(this.detach_Commodity_11));
		this._Commodity_12 = new EntitySet<Commodity_1>(new Action<Commodity_1>(this.attach_Commodity_12), new Action<Commodity_1>(this.detach_Commodity_12));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type_Name", DbType="NVarChar(MAX)")]
	public string Type_Name
	{
		get
		{
			return this._Type_Name;
		}
		set
		{
			if ((this._Type_Name != value))
			{
				this.OnType_NameChanging(value);
				this.SendPropertyChanging();
				this._Type_Name = value;
				this.SendPropertyChanged("Type_Name");
				this.OnType_NameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_img", DbType="NVarChar(MAX)")]
	public string img
	{
		get
		{
			return this._img;
		}
		set
		{
			if ((this._img != value))
			{
				this.OnimgChanging(value);
				this.SendPropertyChanging();
				this._img = value;
				this.SendPropertyChanged("img");
				this.OnimgChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NVarChar(MAX)")]
	public string Time
	{
		get
		{
			return this._Time;
		}
		set
		{
			if ((this._Time != value))
			{
				this.OnTimeChanging(value);
				this.SendPropertyChanging();
				this._Time = value;
				this.SendPropertyChanged("Time");
				this.OnTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Commodity_type_Commodity_1", Storage="_Commodity_1", ThisKey="ID", OtherKey="ID_1_ID")]
	public EntitySet<Commodity_1> Commodity_1
	{
		get
		{
			return this._Commodity_1;
		}
		set
		{
			this._Commodity_1.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Commodity_type_Commodity_11", Storage="_Commodity_11", ThisKey="ID", OtherKey="ID_1_ID")]
	public EntitySet<Commodity_1> Commodity_11
	{
		get
		{
			return this._Commodity_11;
		}
		set
		{
			this._Commodity_11.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Commodity_type_Commodity_12", Storage="_Commodity_12", ThisKey="ID", OtherKey="ID_1_ID")]
	public EntitySet<Commodity_1> Commodity_12
	{
		get
		{
			return this._Commodity_12;
		}
		set
		{
			this._Commodity_12.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Commodity_1(Commodity_1 entity)
	{
		this.SendPropertyChanging();
		entity.Commodity_type = this;
	}
	
	private void detach_Commodity_1(Commodity_1 entity)
	{
		this.SendPropertyChanging();
		entity.Commodity_type = null;
	}
	
	private void attach_Commodity_11(Commodity_1 entity)
	{
		this.SendPropertyChanging();
		entity.Commodity_type1 = this;
	}
	
	private void detach_Commodity_11(Commodity_1 entity)
	{
		this.SendPropertyChanging();
		entity.Commodity_type1 = null;
	}
	
	private void attach_Commodity_12(Commodity_1 entity)
	{
		this.SendPropertyChanging();
		entity.Commodity_type2 = this;
	}
	
	private void detach_Commodity_12(Commodity_1 entity)
	{
		this.SendPropertyChanging();
		entity.Commodity_type2 = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Commodity_option1")]
public partial class Commodity_option1 : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _option;
	
	private System.Nullable<int> _Commodity_Id;
	
	private string _type_name;
	
	private string _Time;
	
	private EntitySet<Commodity_attribute> _Commodity_attribute;
	
	private EntitySet<Shopcarts> _Shopcarts;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnoptionChanging(string value);
    partial void OnoptionChanged();
    partial void OnCommodity_IdChanging(System.Nullable<int> value);
    partial void OnCommodity_IdChanged();
    partial void Ontype_nameChanging(string value);
    partial void Ontype_nameChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    #endregion
	
	public Commodity_option1()
	{
		this._Commodity_attribute = new EntitySet<Commodity_attribute>(new Action<Commodity_attribute>(this.attach_Commodity_attribute), new Action<Commodity_attribute>(this.detach_Commodity_attribute));
		this._Shopcarts = new EntitySet<Shopcarts>(new Action<Shopcarts>(this.attach_Shopcarts), new Action<Shopcarts>(this.detach_Shopcarts));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[option]", Storage="_option", DbType="NVarChar(MAX)")]
	public string option
	{
		get
		{
			return this._option;
		}
		set
		{
			if ((this._option != value))
			{
				this.OnoptionChanging(value);
				this.SendPropertyChanging();
				this._option = value;
				this.SendPropertyChanged("option");
				this.OnoptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Commodity_Id", DbType="Int")]
	public System.Nullable<int> Commodity_Id
	{
		get
		{
			return this._Commodity_Id;
		}
		set
		{
			if ((this._Commodity_Id != value))
			{
				this.OnCommodity_IdChanging(value);
				this.SendPropertyChanging();
				this._Commodity_Id = value;
				this.SendPropertyChanged("Commodity_Id");
				this.OnCommodity_IdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type_name", DbType="NVarChar(MAX)")]
	public string type_name
	{
		get
		{
			return this._type_name;
		}
		set
		{
			if ((this._type_name != value))
			{
				this.Ontype_nameChanging(value);
				this.SendPropertyChanging();
				this._type_name = value;
				this.SendPropertyChanged("type_name");
				this.Ontype_nameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NVarChar(MAX)")]
	public string Time
	{
		get
		{
			return this._Time;
		}
		set
		{
			if ((this._Time != value))
			{
				this.OnTimeChanging(value);
				this.SendPropertyChanging();
				this._Time = value;
				this.SendPropertyChanged("Time");
				this.OnTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Commodity_option1_Commodity_attribute", Storage="_Commodity_attribute", ThisKey="Id", OtherKey="Commodity_option1_Id")]
	public EntitySet<Commodity_attribute> Commodity_attribute
	{
		get
		{
			return this._Commodity_attribute;
		}
		set
		{
			this._Commodity_attribute.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Commodity_option1_Shopcarts", Storage="_Shopcarts", ThisKey="Id", OtherKey="Commodity_option1_Id")]
	public EntitySet<Shopcarts> Shopcarts
	{
		get
		{
			return this._Shopcarts;
		}
		set
		{
			this._Shopcarts.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Commodity_attribute(Commodity_attribute entity)
	{
		this.SendPropertyChanging();
		entity.Commodity_option1 = this;
	}
	
	private void detach_Commodity_attribute(Commodity_attribute entity)
	{
		this.SendPropertyChanging();
		entity.Commodity_option1 = null;
	}
	
	private void attach_Shopcarts(Shopcarts entity)
	{
		this.SendPropertyChanging();
		entity.Commodity_option1 = this;
	}
	
	private void detach_Shopcarts(Shopcarts entity)
	{
		this.SendPropertyChanging();
		entity.Commodity_option1 = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Commodity_option2")]
public partial class Commodity_option2 : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _option;
	
	private System.Nullable<int> _Commodity_Id;
	
	private string _type_name;
	
	private string _Time;
	
	private EntitySet<Commodity_attribute> _Commodity_attribute;
	
	private EntitySet<Shopcarts> _Shopcarts;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnoptionChanging(string value);
    partial void OnoptionChanged();
    partial void OnCommodity_IdChanging(System.Nullable<int> value);
    partial void OnCommodity_IdChanged();
    partial void Ontype_nameChanging(string value);
    partial void Ontype_nameChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    #endregion
	
	public Commodity_option2()
	{
		this._Commodity_attribute = new EntitySet<Commodity_attribute>(new Action<Commodity_attribute>(this.attach_Commodity_attribute), new Action<Commodity_attribute>(this.detach_Commodity_attribute));
		this._Shopcarts = new EntitySet<Shopcarts>(new Action<Shopcarts>(this.attach_Shopcarts), new Action<Shopcarts>(this.detach_Shopcarts));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[option]", Storage="_option", DbType="NVarChar(MAX)")]
	public string option
	{
		get
		{
			return this._option;
		}
		set
		{
			if ((this._option != value))
			{
				this.OnoptionChanging(value);
				this.SendPropertyChanging();
				this._option = value;
				this.SendPropertyChanged("option");
				this.OnoptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Commodity_Id", DbType="Int")]
	public System.Nullable<int> Commodity_Id
	{
		get
		{
			return this._Commodity_Id;
		}
		set
		{
			if ((this._Commodity_Id != value))
			{
				this.OnCommodity_IdChanging(value);
				this.SendPropertyChanging();
				this._Commodity_Id = value;
				this.SendPropertyChanged("Commodity_Id");
				this.OnCommodity_IdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type_name", DbType="NVarChar(MAX)")]
	public string type_name
	{
		get
		{
			return this._type_name;
		}
		set
		{
			if ((this._type_name != value))
			{
				this.Ontype_nameChanging(value);
				this.SendPropertyChanging();
				this._type_name = value;
				this.SendPropertyChanged("type_name");
				this.Ontype_nameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NVarChar(MAX)")]
	public string Time
	{
		get
		{
			return this._Time;
		}
		set
		{
			if ((this._Time != value))
			{
				this.OnTimeChanging(value);
				this.SendPropertyChanging();
				this._Time = value;
				this.SendPropertyChanged("Time");
				this.OnTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Commodity_option2_Commodity_attribute", Storage="_Commodity_attribute", ThisKey="Id", OtherKey="Commodity_option2_Id")]
	public EntitySet<Commodity_attribute> Commodity_attribute
	{
		get
		{
			return this._Commodity_attribute;
		}
		set
		{
			this._Commodity_attribute.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Commodity_option2_Shopcarts", Storage="_Shopcarts", ThisKey="Id", OtherKey="Commodity_option2_Id")]
	public EntitySet<Shopcarts> Shopcarts
	{
		get
		{
			return this._Shopcarts;
		}
		set
		{
			this._Shopcarts.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Commodity_attribute(Commodity_attribute entity)
	{
		this.SendPropertyChanging();
		entity.Commodity_option2 = this;
	}
	
	private void detach_Commodity_attribute(Commodity_attribute entity)
	{
		this.SendPropertyChanging();
		entity.Commodity_option2 = null;
	}
	
	private void attach_Shopcarts(Shopcarts entity)
	{
		this.SendPropertyChanging();
		entity.Commodity_option2 = this;
	}
	
	private void detach_Shopcarts(Shopcarts entity)
	{
		this.SendPropertyChanging();
		entity.Commodity_option2 = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IMGs")]
public partial class IMGs : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _img;
	
	private string _type;
	
	private string _describe1;
	
	private string _describe2;
	
	private System.Nullable<int> _Commodity_Id;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnimgChanging(string value);
    partial void OnimgChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    partial void Ondescribe1Changing(string value);
    partial void Ondescribe1Changed();
    partial void Ondescribe2Changing(string value);
    partial void Ondescribe2Changed();
    partial void OnCommodity_IdChanging(System.Nullable<int> value);
    partial void OnCommodity_IdChanged();
    #endregion
	
	public IMGs()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_img", DbType="NVarChar(MAX)")]
	public string img
	{
		get
		{
			return this._img;
		}
		set
		{
			if ((this._img != value))
			{
				this.OnimgChanging(value);
				this.SendPropertyChanging();
				this._img = value;
				this.SendPropertyChanged("img");
				this.OnimgChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="NVarChar(MAX)")]
	public string type
	{
		get
		{
			return this._type;
		}
		set
		{
			if ((this._type != value))
			{
				this.OntypeChanging(value);
				this.SendPropertyChanging();
				this._type = value;
				this.SendPropertyChanged("type");
				this.OntypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_describe1", DbType="NVarChar(MAX)")]
	public string describe1
	{
		get
		{
			return this._describe1;
		}
		set
		{
			if ((this._describe1 != value))
			{
				this.Ondescribe1Changing(value);
				this.SendPropertyChanging();
				this._describe1 = value;
				this.SendPropertyChanged("describe1");
				this.Ondescribe1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_describe2", DbType="NVarChar(MAX)")]
	public string describe2
	{
		get
		{
			return this._describe2;
		}
		set
		{
			if ((this._describe2 != value))
			{
				this.Ondescribe2Changing(value);
				this.SendPropertyChanging();
				this._describe2 = value;
				this.SendPropertyChanged("describe2");
				this.Ondescribe2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Commodity_Id", DbType="Int")]
	public System.Nullable<int> Commodity_Id
	{
		get
		{
			return this._Commodity_Id;
		}
		set
		{
			if ((this._Commodity_Id != value))
			{
				this.OnCommodity_IdChanging(value);
				this.SendPropertyChanging();
				this._Commodity_Id = value;
				this.SendPropertyChanged("Commodity_Id");
				this.OnCommodity_IdChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Resses")]
public partial class Resses : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private string _Province;
	
	private string _City;
	
	private string _Township;
	
	private string _xiangxi;
	
	private System.Nullable<int> _User_ID;
	
	private string _telephone;
	
	private string _name;
	
	private string _moren;
	
	private EntityRef<Users> _Users;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnProvinceChanging(string value);
    partial void OnProvinceChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnTownshipChanging(string value);
    partial void OnTownshipChanged();
    partial void OnxiangxiChanging(string value);
    partial void OnxiangxiChanged();
    partial void OnUser_IDChanging(System.Nullable<int> value);
    partial void OnUser_IDChanged();
    partial void OntelephoneChanging(string value);
    partial void OntelephoneChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnmorenChanging(string value);
    partial void OnmorenChanged();
    #endregion
	
	public Resses()
	{
		this._Users = default(EntityRef<Users>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Province", DbType="NVarChar(MAX)")]
	public string Province
	{
		get
		{
			return this._Province;
		}
		set
		{
			if ((this._Province != value))
			{
				this.OnProvinceChanging(value);
				this.SendPropertyChanging();
				this._Province = value;
				this.SendPropertyChanged("Province");
				this.OnProvinceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(MAX)")]
	public string City
	{
		get
		{
			return this._City;
		}
		set
		{
			if ((this._City != value))
			{
				this.OnCityChanging(value);
				this.SendPropertyChanging();
				this._City = value;
				this.SendPropertyChanged("City");
				this.OnCityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Township", DbType="NVarChar(MAX)")]
	public string Township
	{
		get
		{
			return this._Township;
		}
		set
		{
			if ((this._Township != value))
			{
				this.OnTownshipChanging(value);
				this.SendPropertyChanging();
				this._Township = value;
				this.SendPropertyChanged("Township");
				this.OnTownshipChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xiangxi", DbType="NVarChar(MAX)")]
	public string xiangxi
	{
		get
		{
			return this._xiangxi;
		}
		set
		{
			if ((this._xiangxi != value))
			{
				this.OnxiangxiChanging(value);
				this.SendPropertyChanging();
				this._xiangxi = value;
				this.SendPropertyChanged("xiangxi");
				this.OnxiangxiChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_ID", DbType="Int")]
	public System.Nullable<int> User_ID
	{
		get
		{
			return this._User_ID;
		}
		set
		{
			if ((this._User_ID != value))
			{
				if (this._Users.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUser_IDChanging(value);
				this.SendPropertyChanging();
				this._User_ID = value;
				this.SendPropertyChanged("User_ID");
				this.OnUser_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telephone", DbType="NVarChar(MAX)")]
	public string telephone
	{
		get
		{
			return this._telephone;
		}
		set
		{
			if ((this._telephone != value))
			{
				this.OntelephoneChanging(value);
				this.SendPropertyChanging();
				this._telephone = value;
				this.SendPropertyChanged("telephone");
				this.OntelephoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(MAX)")]
	public string name
	{
		get
		{
			return this._name;
		}
		set
		{
			if ((this._name != value))
			{
				this.OnnameChanging(value);
				this.SendPropertyChanging();
				this._name = value;
				this.SendPropertyChanged("name");
				this.OnnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_moren", DbType="NVarChar(MAX)")]
	public string moren
	{
		get
		{
			return this._moren;
		}
		set
		{
			if ((this._moren != value))
			{
				this.OnmorenChanging(value);
				this.SendPropertyChanging();
				this._moren = value;
				this.SendPropertyChanged("moren");
				this.OnmorenChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_Resses", Storage="_Users", ThisKey="User_ID", OtherKey="ID", IsForeignKey=true)]
	public Users Users
	{
		get
		{
			return this._Users.Entity;
		}
		set
		{
			Users previousValue = this._Users.Entity;
			if (((previousValue != value) 
						|| (this._Users.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Users.Entity = null;
					previousValue.Resses.Remove(this);
				}
				this._Users.Entity = value;
				if ((value != null))
				{
					value.Resses.Add(this);
					this._User_ID = value.ID;
				}
				else
				{
					this._User_ID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Users");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
public partial class Users : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _username;
	
	private string _password;
	
	private int _User_IN_ID;
	
	private EntitySet<Resses> _Resses;
	
	private EntitySet<Orders> _Orders;
	
	private EntityRef<User_IN> _User_IN;
	
	private EntityRef<User_IN> _User_IN1;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnUser_IN_IDChanging(int value);
    partial void OnUser_IN_IDChanged();
    #endregion
	
	public Users()
	{
		this._Resses = new EntitySet<Resses>(new Action<Resses>(this.attach_Resses), new Action<Resses>(this.detach_Resses));
		this._Orders = new EntitySet<Orders>(new Action<Orders>(this.attach_Orders), new Action<Orders>(this.detach_Orders));
		this._User_IN = default(EntityRef<User_IN>);
		this._User_IN1 = default(EntityRef<User_IN>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(MAX)")]
	public string username
	{
		get
		{
			return this._username;
		}
		set
		{
			if ((this._username != value))
			{
				this.OnusernameChanging(value);
				this.SendPropertyChanging();
				this._username = value;
				this.SendPropertyChanged("username");
				this.OnusernameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(MAX)")]
	public string password
	{
		get
		{
			return this._password;
		}
		set
		{
			if ((this._password != value))
			{
				this.OnpasswordChanging(value);
				this.SendPropertyChanging();
				this._password = value;
				this.SendPropertyChanged("password");
				this.OnpasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_IN_ID", DbType="Int NOT NULL")]
	public int User_IN_ID
	{
		get
		{
			return this._User_IN_ID;
		}
		set
		{
			if ((this._User_IN_ID != value))
			{
				if ((this._User_IN.HasLoadedOrAssignedValue || this._User_IN1.HasLoadedOrAssignedValue))
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUser_IN_IDChanging(value);
				this.SendPropertyChanging();
				this._User_IN_ID = value;
				this.SendPropertyChanged("User_IN_ID");
				this.OnUser_IN_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_Resses", Storage="_Resses", ThisKey="ID", OtherKey="User_ID")]
	public EntitySet<Resses> Resses
	{
		get
		{
			return this._Resses;
		}
		set
		{
			this._Resses.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_Orders", Storage="_Orders", ThisKey="ID", OtherKey="user_id")]
	public EntitySet<Orders> Orders
	{
		get
		{
			return this._Orders;
		}
		set
		{
			this._Orders.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_IN_Users", Storage="_User_IN", ThisKey="User_IN_ID", OtherKey="ID", IsForeignKey=true)]
	public User_IN User_IN
	{
		get
		{
			return this._User_IN.Entity;
		}
		set
		{
			User_IN previousValue = this._User_IN.Entity;
			if (((previousValue != value) 
						|| (this._User_IN.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._User_IN.Entity = null;
					previousValue.Users.Remove(this);
				}
				this._User_IN.Entity = value;
				if ((value != null))
				{
					value.Users.Add(this);
					this._User_IN_ID = value.ID;
				}
				else
				{
					this._User_IN_ID = default(int);
				}
				this.SendPropertyChanged("User_IN");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_IN_Users1", Storage="_User_IN1", ThisKey="User_IN_ID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public User_IN User_IN1
	{
		get
		{
			return this._User_IN1.Entity;
		}
		set
		{
			User_IN previousValue = this._User_IN1.Entity;
			if (((previousValue != value) 
						|| (this._User_IN1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._User_IN1.Entity = null;
					previousValue.Users1.Remove(this);
				}
				this._User_IN1.Entity = value;
				if ((value != null))
				{
					value.Users1.Add(this);
					this._User_IN_ID = value.ID;
				}
				else
				{
					this._User_IN_ID = default(int);
				}
				this.SendPropertyChanged("User_IN1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Resses(Resses entity)
	{
		this.SendPropertyChanging();
		entity.Users = this;
	}
	
	private void detach_Resses(Resses entity)
	{
		this.SendPropertyChanging();
		entity.Users = null;
	}
	
	private void attach_Orders(Orders entity)
	{
		this.SendPropertyChanging();
		entity.Users = this;
	}
	
	private void detach_Orders(Orders entity)
	{
		this.SendPropertyChanging();
		entity.Users = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.User_IN")]
public partial class User_IN : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _name;
	
	private string _nikename;
	
	private string _telephone;
	
	private int _sex;
	
	private string _birthday;
	
	private string _username;
	
	private EntitySet<Users> _Users;
	
	private EntitySet<Users> _Users1;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnnikenameChanging(string value);
    partial void OnnikenameChanged();
    partial void OntelephoneChanging(string value);
    partial void OntelephoneChanged();
    partial void OnsexChanging(int value);
    partial void OnsexChanged();
    partial void OnbirthdayChanging(string value);
    partial void OnbirthdayChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    #endregion
	
	public User_IN()
	{
		this._Users = new EntitySet<Users>(new Action<Users>(this.attach_Users), new Action<Users>(this.detach_Users));
		this._Users1 = new EntitySet<Users>(new Action<Users>(this.attach_Users1), new Action<Users>(this.detach_Users1));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(MAX)")]
	public string name
	{
		get
		{
			return this._name;
		}
		set
		{
			if ((this._name != value))
			{
				this.OnnameChanging(value);
				this.SendPropertyChanging();
				this._name = value;
				this.SendPropertyChanged("name");
				this.OnnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nikename", DbType="NVarChar(MAX)")]
	public string nikename
	{
		get
		{
			return this._nikename;
		}
		set
		{
			if ((this._nikename != value))
			{
				this.OnnikenameChanging(value);
				this.SendPropertyChanging();
				this._nikename = value;
				this.SendPropertyChanged("nikename");
				this.OnnikenameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telephone", DbType="NVarChar(MAX)")]
	public string telephone
	{
		get
		{
			return this._telephone;
		}
		set
		{
			if ((this._telephone != value))
			{
				this.OntelephoneChanging(value);
				this.SendPropertyChanging();
				this._telephone = value;
				this.SendPropertyChanged("telephone");
				this.OntelephoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sex", DbType="Int NOT NULL")]
	public int sex
	{
		get
		{
			return this._sex;
		}
		set
		{
			if ((this._sex != value))
			{
				this.OnsexChanging(value);
				this.SendPropertyChanging();
				this._sex = value;
				this.SendPropertyChanged("sex");
				this.OnsexChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_birthday", DbType="NVarChar(MAX)")]
	public string birthday
	{
		get
		{
			return this._birthday;
		}
		set
		{
			if ((this._birthday != value))
			{
				this.OnbirthdayChanging(value);
				this.SendPropertyChanging();
				this._birthday = value;
				this.SendPropertyChanged("birthday");
				this.OnbirthdayChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(MAX)")]
	public string username
	{
		get
		{
			return this._username;
		}
		set
		{
			if ((this._username != value))
			{
				this.OnusernameChanging(value);
				this.SendPropertyChanging();
				this._username = value;
				this.SendPropertyChanged("username");
				this.OnusernameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_IN_Users", Storage="_Users", ThisKey="ID", OtherKey="User_IN_ID")]
	public EntitySet<Users> Users
	{
		get
		{
			return this._Users;
		}
		set
		{
			this._Users.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_IN_Users1", Storage="_Users1", ThisKey="ID", OtherKey="User_IN_ID")]
	public EntitySet<Users> Users1
	{
		get
		{
			return this._Users1;
		}
		set
		{
			this._Users1.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Users(Users entity)
	{
		this.SendPropertyChanging();
		entity.User_IN = this;
	}
	
	private void detach_Users(Users entity)
	{
		this.SendPropertyChanging();
		entity.User_IN = null;
	}
	
	private void attach_Users1(Users entity)
	{
		this.SendPropertyChanging();
		entity.User_IN1 = this;
	}
	
	private void detach_Users1(Users entity)
	{
		this.SendPropertyChanging();
		entity.User_IN1 = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Shopcarts")]
public partial class Shopcarts : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Username;
	
	private int _Number;
	
	private int _Commodity_option1_Id;
	
	private int _Commodity_option2_Id;
	
	private int _Commodity_Id;
	
	private double _Price;
	
	private double _Old_Price;
	
	private EntityRef<Commodity_option1> _Commodity_option1;
	
	private EntityRef<Commodity_option2> _Commodity_option2;
	
	private EntityRef<Commodity_attribute> _Commodity_attribute;
	
	private EntityRef<Commodity_attribute> _Commodity_attribute1;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnNumberChanging(int value);
    partial void OnNumberChanged();
    partial void OnCommodity_option1_IdChanging(int value);
    partial void OnCommodity_option1_IdChanged();
    partial void OnCommodity_option2_IdChanging(int value);
    partial void OnCommodity_option2_IdChanged();
    partial void OnCommodity_IdChanging(int value);
    partial void OnCommodity_IdChanged();
    partial void OnPriceChanging(double value);
    partial void OnPriceChanged();
    partial void OnOld_PriceChanging(double value);
    partial void OnOld_PriceChanged();
    #endregion
	
	public Shopcarts()
	{
		this._Commodity_option1 = default(EntityRef<Commodity_option1>);
		this._Commodity_option2 = default(EntityRef<Commodity_option2>);
		this._Commodity_attribute = default(EntityRef<Commodity_attribute>);
		this._Commodity_attribute1 = default(EntityRef<Commodity_attribute>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(MAX)")]
	public string Username
	{
		get
		{
			return this._Username;
		}
		set
		{
			if ((this._Username != value))
			{
				this.OnUsernameChanging(value);
				this.SendPropertyChanging();
				this._Username = value;
				this.SendPropertyChanged("Username");
				this.OnUsernameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="Int NOT NULL")]
	public int Number
	{
		get
		{
			return this._Number;
		}
		set
		{
			if ((this._Number != value))
			{
				this.OnNumberChanging(value);
				this.SendPropertyChanging();
				this._Number = value;
				this.SendPropertyChanged("Number");
				this.OnNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Commodity_option1_Id", DbType="Int NOT NULL")]
	public int Commodity_option1_Id
	{
		get
		{
			return this._Commodity_option1_Id;
		}
		set
		{
			if ((this._Commodity_option1_Id != value))
			{
				if (this._Commodity_option1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCommodity_option1_IdChanging(value);
				this.SendPropertyChanging();
				this._Commodity_option1_Id = value;
				this.SendPropertyChanged("Commodity_option1_Id");
				this.OnCommodity_option1_IdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Commodity_option2_Id", DbType="Int NOT NULL")]
	public int Commodity_option2_Id
	{
		get
		{
			return this._Commodity_option2_Id;
		}
		set
		{
			if ((this._Commodity_option2_Id != value))
			{
				if (this._Commodity_option2.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCommodity_option2_IdChanging(value);
				this.SendPropertyChanging();
				this._Commodity_option2_Id = value;
				this.SendPropertyChanged("Commodity_option2_Id");
				this.OnCommodity_option2_IdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Commodity_Id", DbType="Int NOT NULL")]
	public int Commodity_Id
	{
		get
		{
			return this._Commodity_Id;
		}
		set
		{
			if ((this._Commodity_Id != value))
			{
				if ((this._Commodity_attribute.HasLoadedOrAssignedValue || this._Commodity_attribute1.HasLoadedOrAssignedValue))
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCommodity_IdChanging(value);
				this.SendPropertyChanging();
				this._Commodity_Id = value;
				this.SendPropertyChanged("Commodity_Id");
				this.OnCommodity_IdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float NOT NULL")]
	public double Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this.OnPriceChanging(value);
				this.SendPropertyChanging();
				this._Price = value;
				this.SendPropertyChanged("Price");
				this.OnPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Old_Price", DbType="Float NOT NULL")]
	public double Old_Price
	{
		get
		{
			return this._Old_Price;
		}
		set
		{
			if ((this._Old_Price != value))
			{
				this.OnOld_PriceChanging(value);
				this.SendPropertyChanging();
				this._Old_Price = value;
				this.SendPropertyChanged("Old_Price");
				this.OnOld_PriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Commodity_option1_Shopcarts", Storage="_Commodity_option1", ThisKey="Commodity_option1_Id", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public Commodity_option1 Commodity_option1
	{
		get
		{
			return this._Commodity_option1.Entity;
		}
		set
		{
			Commodity_option1 previousValue = this._Commodity_option1.Entity;
			if (((previousValue != value) 
						|| (this._Commodity_option1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Commodity_option1.Entity = null;
					previousValue.Shopcarts.Remove(this);
				}
				this._Commodity_option1.Entity = value;
				if ((value != null))
				{
					value.Shopcarts.Add(this);
					this._Commodity_option1_Id = value.Id;
				}
				else
				{
					this._Commodity_option1_Id = default(int);
				}
				this.SendPropertyChanged("Commodity_option1");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Commodity_option2_Shopcarts", Storage="_Commodity_option2", ThisKey="Commodity_option2_Id", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public Commodity_option2 Commodity_option2
	{
		get
		{
			return this._Commodity_option2.Entity;
		}
		set
		{
			Commodity_option2 previousValue = this._Commodity_option2.Entity;
			if (((previousValue != value) 
						|| (this._Commodity_option2.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Commodity_option2.Entity = null;
					previousValue.Shopcarts.Remove(this);
				}
				this._Commodity_option2.Entity = value;
				if ((value != null))
				{
					value.Shopcarts.Add(this);
					this._Commodity_option2_Id = value.Id;
				}
				else
				{
					this._Commodity_option2_Id = default(int);
				}
				this.SendPropertyChanged("Commodity_option2");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Commodity_attribute_Shopcarts", Storage="_Commodity_attribute", ThisKey="Commodity_Id", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public Commodity_attribute Commodity_attribute
	{
		get
		{
			return this._Commodity_attribute.Entity;
		}
		set
		{
			Commodity_attribute previousValue = this._Commodity_attribute.Entity;
			if (((previousValue != value) 
						|| (this._Commodity_attribute.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Commodity_attribute.Entity = null;
					previousValue.Shopcarts.Remove(this);
				}
				this._Commodity_attribute.Entity = value;
				if ((value != null))
				{
					value.Shopcarts.Add(this);
					this._Commodity_Id = value.Id;
				}
				else
				{
					this._Commodity_Id = default(int);
				}
				this.SendPropertyChanged("Commodity_attribute");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Commodity_attribute_Shopcarts1", Storage="_Commodity_attribute1", ThisKey="Commodity_Id", OtherKey="Id", IsForeignKey=true)]
	public Commodity_attribute Commodity_attribute1
	{
		get
		{
			return this._Commodity_attribute1.Entity;
		}
		set
		{
			Commodity_attribute previousValue = this._Commodity_attribute1.Entity;
			if (((previousValue != value) 
						|| (this._Commodity_attribute1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Commodity_attribute1.Entity = null;
					previousValue.Shopcarts1.Remove(this);
				}
				this._Commodity_attribute1.Entity = value;
				if ((value != null))
				{
					value.Shopcarts1.Add(this);
					this._Commodity_Id = value.Id;
				}
				else
				{
					this._Commodity_Id = default(int);
				}
				this.SendPropertyChanged("Commodity_attribute1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Orders")]
public partial class Orders : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private int _Commodity_Id;
	
	private int _user_id;
	
	private int _BuyNum;
	
	private string _sendAddress;
	
	private string _ManName;
	
	private string _Manphone;
	
	private string _Time;
	
	private string _State;
	
	private string _Price;
	
	private EntityRef<Commodity_attribute> _Commodity_attribute;
	
	private EntityRef<Users> _Users;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCommodity_IdChanging(int value);
    partial void OnCommodity_IdChanged();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void OnBuyNumChanging(int value);
    partial void OnBuyNumChanged();
    partial void OnsendAddressChanging(string value);
    partial void OnsendAddressChanged();
    partial void OnManNameChanging(string value);
    partial void OnManNameChanged();
    partial void OnManphoneChanging(string value);
    partial void OnManphoneChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnPriceChanging(string value);
    partial void OnPriceChanged();
    #endregion
	
	public Orders()
	{
		this._Commodity_attribute = default(EntityRef<Commodity_attribute>);
		this._Users = default(EntityRef<Users>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Commodity_Id", DbType="Int NOT NULL")]
	public int Commodity_Id
	{
		get
		{
			return this._Commodity_Id;
		}
		set
		{
			if ((this._Commodity_Id != value))
			{
				if (this._Commodity_attribute.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCommodity_IdChanging(value);
				this.SendPropertyChanging();
				this._Commodity_Id = value;
				this.SendPropertyChanged("Commodity_Id");
				this.OnCommodity_IdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int NOT NULL")]
	public int user_id
	{
		get
		{
			return this._user_id;
		}
		set
		{
			if ((this._user_id != value))
			{
				if (this._Users.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onuser_idChanging(value);
				this.SendPropertyChanging();
				this._user_id = value;
				this.SendPropertyChanged("user_id");
				this.Onuser_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyNum", DbType="Int NOT NULL")]
	public int BuyNum
	{
		get
		{
			return this._BuyNum;
		}
		set
		{
			if ((this._BuyNum != value))
			{
				this.OnBuyNumChanging(value);
				this.SendPropertyChanging();
				this._BuyNum = value;
				this.SendPropertyChanged("BuyNum");
				this.OnBuyNumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sendAddress", DbType="NVarChar(MAX)")]
	public string sendAddress
	{
		get
		{
			return this._sendAddress;
		}
		set
		{
			if ((this._sendAddress != value))
			{
				this.OnsendAddressChanging(value);
				this.SendPropertyChanging();
				this._sendAddress = value;
				this.SendPropertyChanged("sendAddress");
				this.OnsendAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManName", DbType="NVarChar(MAX)")]
	public string ManName
	{
		get
		{
			return this._ManName;
		}
		set
		{
			if ((this._ManName != value))
			{
				this.OnManNameChanging(value);
				this.SendPropertyChanging();
				this._ManName = value;
				this.SendPropertyChanged("ManName");
				this.OnManNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manphone", DbType="NVarChar(MAX)")]
	public string Manphone
	{
		get
		{
			return this._Manphone;
		}
		set
		{
			if ((this._Manphone != value))
			{
				this.OnManphoneChanging(value);
				this.SendPropertyChanging();
				this._Manphone = value;
				this.SendPropertyChanged("Manphone");
				this.OnManphoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NVarChar(MAX)")]
	public string Time
	{
		get
		{
			return this._Time;
		}
		set
		{
			if ((this._Time != value))
			{
				this.OnTimeChanging(value);
				this.SendPropertyChanging();
				this._Time = value;
				this.SendPropertyChanged("Time");
				this.OnTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(MAX)")]
	public string State
	{
		get
		{
			return this._State;
		}
		set
		{
			if ((this._State != value))
			{
				this.OnStateChanging(value);
				this.SendPropertyChanging();
				this._State = value;
				this.SendPropertyChanged("State");
				this.OnStateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="NVarChar(MAX)")]
	public string Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this.OnPriceChanging(value);
				this.SendPropertyChanging();
				this._Price = value;
				this.SendPropertyChanged("Price");
				this.OnPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Commodity_attribute_Orders", Storage="_Commodity_attribute", ThisKey="Commodity_Id", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public Commodity_attribute Commodity_attribute
	{
		get
		{
			return this._Commodity_attribute.Entity;
		}
		set
		{
			Commodity_attribute previousValue = this._Commodity_attribute.Entity;
			if (((previousValue != value) 
						|| (this._Commodity_attribute.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Commodity_attribute.Entity = null;
					previousValue.Orders.Remove(this);
				}
				this._Commodity_attribute.Entity = value;
				if ((value != null))
				{
					value.Orders.Add(this);
					this._Commodity_Id = value.Id;
				}
				else
				{
					this._Commodity_Id = default(int);
				}
				this.SendPropertyChanged("Commodity_attribute");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_Orders", Storage="_Users", ThisKey="user_id", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public Users Users
	{
		get
		{
			return this._Users.Entity;
		}
		set
		{
			Users previousValue = this._Users.Entity;
			if (((previousValue != value) 
						|| (this._Users.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Users.Entity = null;
					previousValue.Orders.Remove(this);
				}
				this._Users.Entity = value;
				if ((value != null))
				{
					value.Orders.Add(this);
					this._user_id = value.ID;
				}
				else
				{
					this._user_id = default(int);
				}
				this.SendPropertyChanged("Users");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HTUsers")]
public partial class HTUsers : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _username;
	
	private string _password;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    #endregion
	
	public HTUsers()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(MAX)")]
	public string username
	{
		get
		{
			return this._username;
		}
		set
		{
			if ((this._username != value))
			{
				this.OnusernameChanging(value);
				this.SendPropertyChanging();
				this._username = value;
				this.SendPropertyChanged("username");
				this.OnusernameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(MAX)")]
	public string password
	{
		get
		{
			return this._password;
		}
		set
		{
			if ((this._password != value))
			{
				this.OnpasswordChanging(value);
				this.SendPropertyChanging();
				this._password = value;
				this.SendPropertyChanged("password");
				this.OnpasswordChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
